{"version":3,"sources":["redux/actionTypes.js","components/TodoItem.js","redux/actions.js","components/TodoFilter.js","redux/selectors.js","App.js","reportWebVitals.js","redux/reducers/todos.js","redux/reducers/status.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","TOGGLE_TODO_ISDONE","TOGGLE_TODO_ISUPDATE","UPDATE_TODO","UPDATE_FILTER_STATUS","useState","React","InputField","styled","input","Button","button","TodoItemWrapper","div","TodoContent","prop","isDone","TodoButtonWrapper","TodoUpdateWrapper","form","TodoUpdate","todo","value","setValue","dispatch","useDispatch","onSubmit","e","preventDefault","id","type","payload","updateTodo","placeholder","onChange","target","TodoItem","isUpdate","data-todo-id","onClick","TodoFilterWrapper","TodoFilter","map","name","status","todoSelector","store","todos","statusSelector","AppWrapper","TitleH1","TodoBox","TodoAddWrapper","DivideLine","TodoAdd","addTodo","App","useSelector","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","todoId","todoReducer","state","action","initialState","statusReducer","combineReducers","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0a90ca4.chunk.js","sourcesContent":["export const ADD_TODO = \"add_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO_ISDONE = \"toggle_todo_isDone\";\nexport const TOGGLE_TODO_ISUPDATE = \"toggle_todo_isUpdate\";\nexport const UPDATE_TODO = \"update_todo\";\nexport const UPDATE_FILTER_STATUS = \"update_filter_status\";\nexport const FILTER_TODO = \"filter_todo\";\n","import styled from \"styled-components\";\nimport \"normalize.css\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  deleteTodo,\n  toggleTodoIsDone,\n  toggleTodoIsUpdate,\n  updateTodo,\n} from \"../redux/actions\";\n\nconst { useState } = React;\nconst InputField = styled.input`\n  width: 88%;\n  border: 0;\n  font-size: 16px;\n  background: #f0f0f0;\n\n  &:focus {\n    border: 0;\n  }\n`;\nconst Button = styled.button`\n  font-size: 14px;\n  padding: 3px 5px;\n  border: 1px solid #6c6c6c;\n  border-radius: 5px;\n  cursor: pointer;\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst TodoItemWrapper = styled.div`\n  width: 95%;\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 0;\n  margin: 0 auto;\n  border-bottom: 1px solid #e0e0e0;\n`;\nconst TodoContent = styled.div`\n  font-size: 16px;\n  ${(prop) =>\n    prop.isDone &&\n    `\n    color: \t#BEBEBE;\n    text-decoration: line-through;\n  `}\n`;\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst TodoUpdateWrapper = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nconst TodoUpdate = ({ todo }) => {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <TodoUpdateWrapper\n      onSubmit={(e) => {\n        e.preventDefault();\n        dispatch(updateTodo(todo.id, value));\n        setValue(\"\");\n      }}\n    >\n      <InputField\n        type=\"text\"\n        placeholder={todo.value}\n        value={value}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">確認</Button>\n    </TodoUpdateWrapper>\n  );\n};\n\nconst TodoItem = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {todo.isUpdate && <TodoUpdate todo={todo} />}\n      {!todo.isUpdate && (\n        <TodoItemWrapper data-todo-id={todo.id}>\n          <TodoContent isDone={todo.isDone}>{todo.value}</TodoContent>\n          <TodoButtonWrapper>\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch(toggleTodoIsDone(todo.id));\n              }}\n            >\n              {todo.isDone ? \"已完成\" : \"未完成\"}\n            </Button>\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch(toggleTodoIsUpdate(todo.id));\n              }}\n            >\n              編輯\n            </Button>\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch(deleteTodo(todo.id));\n              }}\n            >\n              刪除\n            </Button>\n          </TodoButtonWrapper>\n        </TodoItemWrapper>\n      )}\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO_ISDONE,\n  TOGGLE_TODO_ISUPDATE,\n  UPDATE_TODO,\n  UPDATE_FILTER_STATUS,\n} from \"./actionTypes\";\n\nexport function addTodo(value) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      value,\n    },\n  };\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function toggleTodoIsDone(id) {\n  return {\n    type: TOGGLE_TODO_ISDONE,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function toggleTodoIsUpdate(id) {\n  return {\n    type: TOGGLE_TODO_ISUPDATE,\n    payload: {\n      id,\n    },\n  };\n}\nexport function updateTodo(id, value) {\n  return {\n    type: UPDATE_TODO,\n    payload: {\n      id,\n      value,\n    },\n  };\n}\n\nexport function updateStatus(status) {\n  return {\n    type: UPDATE_FILTER_STATUS,\n    payload: {\n      status,\n    },\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { updateStatus } from \"../redux/actions\";\n\nconst TodoFilterWrapper = styled.div`\n  text-align: center;\n  margin: 8px auto;\n`;\n\nconst Button = styled.button`\n  font-size: 14px;\n  padding: 3px 5px;\n  border: 1px solid #6c6c6c;\n  border-radius: 5px;\n  cursor: pointer;\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst TodoFilter = () => {\n  const dispatch = useDispatch();\n  const FilterName = [\"All\", \"Done\", \"NotDone\"];\n  return (\n    <TodoFilterWrapper>\n      {FilterName.map((name) => (\n        <Button\n          type=\"button\"\n          key={name}\n          name={name}\n          onClick={() => dispatch(updateStatus(name))}\n        >\n          {name}\n        </Button>\n      ))}\n    </TodoFilterWrapper>\n  );\n};\n\nexport default TodoFilter;\n","export const todoSelector = (store) => store.todos.todos;\nexport const statusSelector = (store) => store.status.status;\n","import styled from \"styled-components\";\nimport TodoItem from \"./components/TodoItem\";\nimport TodoFilter from \"./components/TodoFilter\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { statusSelector, todoSelector } from \"./redux/selectors\";\nimport { addTodo } from \"./redux/actions\";\n\nconst AppWrapper = styled.div`\n  background: #f0f0f0;\n  min-height: 700px;\n`;\n\nconst TitleH1 = styled.div`\n  font-size: 4em;\n  font-weight: bold;\n  text-align: center;\n  color: palevioletred;\n  padding: 20px 0;\n`;\n\nconst TodoBox = styled.div`\n  max-width: 500px;\n  border: 2px solid #6c6c6c;\n  border-radius: 10px;\n  margin: 0 auto;\n`;\nconst TodoAddWrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n`;\nconst InputField = styled.input`\n  width: 88%;\n  border: 0;\n  font-size: 16px;\n  background: #f0f0f0;\n\n  &:focus {\n    border: 0;\n  }\n`;\n\nconst DivideLine = styled.div`\n  content: \"\";\n  width: 95%;\n  border-bottom: 1px solid #6c6c6c;\n  margin: 5px auto;\n`;\nconst Button = styled.button`\n  font-size: 14px;\n  padding: 3px 5px;\n  border: 1px solid #6c6c6c;\n  border-radius: 5px;\n  cursor: pointer;\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst TodoAdd = () => {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <TodoAddWrapper\n      onSubmit={(e) => {\n        e.preventDefault();\n        dispatch(addTodo(value));\n        setValue(\"\");\n      }}\n    >\n      <InputField\n        type=\"text\"\n        placeholder=\"新增 todo\"\n        value={value}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">新增</Button>\n    </TodoAddWrapper>\n  );\n};\n\nfunction App() {\n  const status = useSelector(statusSelector);\n  const todos = useSelector(todoSelector);\n  return (\n    <AppWrapper>\n      <TitleH1>Todo List</TitleH1>\n      <TodoBox>\n        <TodoAdd />\n        <DivideLine />\n        {todos\n          .filter((todo) => {\n            if (status === \"All\") return todo;\n            return status === \"Done\" ? todo.isDone : !todo.isDone;\n          })\n          .map((todo) => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n        <TodoFilter />\n      </TodoBox>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO_ISDONE,\n  TOGGLE_TODO_ISUPDATE,\n  UPDATE_TODO,\n} from \"../actionTypes\";\n\nconst initalState = {\n  todos: [],\n};\n\nlet todoId = 0;\nconst todoReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            value: action.payload.value,\n            isDone: false,\n            isUpdate: false,\n          },\n        ],\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n    case TOGGLE_TODO_ISDONE: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return { ...todo, isDone: !todo.isDone };\n        }),\n      };\n    }\n    case TOGGLE_TODO_ISUPDATE: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return { ...todo, isUpdate: !todo.isUpdate };\n        }),\n      };\n    }\n    case UPDATE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            value: action.payload.value,\n            isDone: false,\n            isUpdate: false,\n          };\n        }),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default todoReducer;\n","import { UPDATE_FILTER_STATUS } from \"../actionTypes\";\n\nconst initialState = {\n  status: \"All\",\n};\nconst statusReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_FILTER_STATUS: {\n      return {\n        ...state,\n        status: action.payload.status,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default statusReducer;\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport status from \"./status\";\n\nexport default combineReducers({ todos, status });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}